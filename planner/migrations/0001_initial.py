# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-11-27 22:16
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import planner.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FlightPlan',
            fields=[
                ('id', models.CharField(default=planner.models.default_fp_slug, max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('state', django_fsm.FSMField(choices=[('planned', 'Planned'), ('completed', 'Completed'), ('invalid', 'Invalid'), ('deleted', 'Deleted')], default='planned', max_length=50)),
                ('flight_id', models.CharField(max_length=100, verbose_name='flight id')),
                ('planned_departure_time', models.DateTimeField(default=planner.models.default_departure, verbose_name='estimated departure time')),
                ('planned_arrival_time', models.DateTimeField(default=planner.models.default_arrival, verbose_name='estimated arrival time')),
                ('payload_weight', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='payload weight (kg)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
            ],
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='MissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(default='', max_length=50, verbose_name='organization')),
                ('mobile_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +9999999999. 10 to 15 digits allowed.', regex='^\\+\\d{10,15}$')], verbose_name='mobile phone number')),
                ('is_test', models.BooleanField(default=False, verbose_name='Test account')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='time of telemetry reading')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='longitude')),
                ('altitude', models.IntegerField(null=True, verbose_name='altitude (cm, MSL)')),
                ('altitude_relative', models.IntegerField(null=True, verbose_name='altiude (cm, AGL)')),
                ('heading', models.FloatField(null=True, verbose_name='heading (degrees)')),
                ('vx', models.FloatField(null=True, verbose_name='velocity x (cm/s)')),
                ('vy', models.FloatField(null=True, verbose_name='velocity y (cm/s)')),
                ('vz', models.FloatField(null=True, verbose_name='velocity z (cm/s)')),
                ('batt', models.IntegerField(null=True, verbose_name='Battery remaining (%)')),
                ('voltage', models.IntegerField(null=True, verbose_name='voltage (mV)')),
                ('current', models.IntegerField(null=True, verbose_name='current (mA)')),
            ],
        ),
        migrations.CreateModel(
            name='TelemetryMetadata',
            fields=[
                ('id', models.CharField(default=planner.models.default_tm_slug, max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('state', django_fsm.FSMField(choices=[('u', 'Uploaded'), ('p', 'Processed'), ('e', 'Error')], default='u', max_length=50, verbose_name='telemetry processing state')),
                ('processor', models.IntegerField(choices=[(0, 'unknown'), (1, 'ulog'), (2, 'tlog')], default=0, verbose_name='telemetry parser')),
                ('path', models.TextField(blank=True, null=True, verbose_name='path to uploaded telemetry file')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('actual_departure_time', models.DateTimeField(blank=True, null=True, verbose_name='actual departure time')),
                ('actual_arrival_time', models.DateTimeField(blank=True, null=True, verbose_name='actual arrival time')),
                ('autopilot_name', models.TextField(blank=True, null=True, verbose_name='autopilot name')),
                ('autopilot_version', models.TextField(blank=True, null=True, verbose_name='autopilot version')),
                ('vehicle_type', models.IntegerField(choices=[(1, 'Multicopter'), (2, 'Fixed Wing'), (3, 'VTOL'), (0, 'Unknown')], default=0, verbose_name='vehicle type')),
                ('flight_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.FlightPlan')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.CharField(default=planner.models.default_vh_slug, max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('state', django_fsm.FSMField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=50)),
                ('model', models.CharField(max_length=50, verbose_name='model')),
                ('serial_number', models.CharField(max_length=100, verbose_name='serial number')),
                ('vehicle_type', models.IntegerField(choices=[(1, 'Multicopter'), (2, 'Fixed Wing'), (3, 'VTOL'), (0, 'Unknown')], default=0, verbose_name='vehicle type')),
                ('empty_weight', models.DecimalField(decimal_places=3, max_digits=8, verbose_name='empty weight (kg)')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Manufacturer')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Operator')),
            ],
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='sequential order')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='longitude')),
                ('altitude_relative', models.IntegerField(blank=True, null=True, verbose_name='altiude (cm, AGL)')),
            ],
        ),
        migrations.CreateModel(
            name='WaypointMetadata',
            fields=[
                ('id', models.CharField(default=planner.models.default_tm_slug, max_length=10, primary_key=True, serialize=False, unique=True, verbose_name='id')),
                ('state', django_fsm.FSMField(choices=[('u', 'Uploaded'), ('p', 'Processed'), ('e', 'Error')], default='u', max_length=50, verbose_name='waypoint processing state')),
                ('processor', models.IntegerField(choices=[(0, 'unknown'), (1, 'Mission Planner .waypoints'), (2, 'QGroundControl .plan')], default=0, verbose_name='waypoint parser')),
                ('path', models.TextField(blank=True, null=True, verbose_name='path to uploaded waypoint file')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='error message')),
                ('v_cruise', models.FloatField(blank=True, null=True, verbose_name='velocity in cruise (cm/s)')),
                ('v_hover', models.FloatField(blank=True, null=True, verbose_name='velocity in hover (cm/s)')),
                ('flight_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='planner.FlightPlan')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Operator')),
            ],
        ),
        migrations.AddField(
            model_name='waypoint',
            name='waypoint_metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waypoints', to='planner.WaypointMetadata'),
        ),
        migrations.AddField(
            model_name='telemetry',
            name='telemetry_metadata',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemetries', to='planner.TelemetryMetadata'),
        ),
        migrations.AddField(
            model_name='flightplan',
            name='mission_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.MissionType'),
        ),
        migrations.AddField(
            model_name='flightplan',
            name='operator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planner.Operator'),
        ),
        migrations.AddField(
            model_name='flightplan',
            name='telemetry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.TelemetryMetadata'),
        ),
        migrations.AddField(
            model_name='flightplan',
            name='vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.Vehicle'),
        ),
        migrations.AddField(
            model_name='flightplan',
            name='waypoints',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.WaypointMetadata'),
        ),
        migrations.AddIndex(
            model_name='waypoint',
            index=models.Index(fields=['waypoint_metadata', 'order'], name='planner_way_waypoin_59a70b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='waypoint',
            unique_together=set([('waypoint_metadata', 'order')]),
        ),
        migrations.AddIndex(
            model_name='telemetry',
            index=models.Index(fields=['telemetry_metadata', 'time'], name='planner_tel_telemet_f598ab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='telemetry',
            unique_together=set([('telemetry_metadata', 'time')]),
        ),
    ]
