# CircleCI 2.0 configuration file
#
# Referennce:
# - Python - https://circleci.com/docs/2.0/language-python/
# - Node - https://circleci.com/docs/2.0/language-javascript/
#
version: 2
jobs:
  build-python:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.5

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
      - image: redis

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}
          # force clean cache when there's a cache miss
          - v1-dependencies-{{ epoch }}

      - run:
          name: install dependencies
          command: |
            python -m venv vtest
            . vtest/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./vtest
          key: v1-dependencies-{{ .Branch }}-{{ checksum "requirements.txt" }}

      # set env to test
      - run:
          name: create local settings
          command: |
            touch logflights/local_settings.py
            echo "LOGFLIGHTS_ENVIRONMENT='ci'" >> logflights/local_settings.py
            echo "GOOGLE_MAPS_API_KEY='${GOOGLE_MAPS_API_KEY}'" >> logflights/local_settings.py

      # run tests!
      - run:
          name: run tests
          command: |
            . vtest/bin/activate
            make test-all

      - store_artifacts:
          path: test-reports
          destination: test-reports

  build-frontend:
    docker:
      - image: circleci/node:8.9.1

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - dependencies-{{ checksum "frontend/package.json" }}
          - dependencies-

      - run:
          working_directory: frontend
          command: |
            yarn install

      - save_cache:
          paths:
            - frontend/node_modules
          key: dependencies-{{ checksum "frontend/package.json" }}

      - run:
          working_directory: frontend
          name: lint frontend
          command: |
            yarn run lint

workflows:
  version: 2
  build:
      jobs:
        - build-python
        - build-frontend
